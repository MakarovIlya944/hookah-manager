/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

// import css from '../css/Simple-Slider.css';
const slider = __webpack_require__(1);
const sel = __webpack_require__(2);
$(function() {
    document.getElementById('mass').onchange = () => { sel.changeMass('mass'); };
    document.getElementById('mass-range').onchange = () => { sel.changeMass('mass-range'); };
    document.getElementById('mass-range').onmousemove = () => { sel.changeMass('mass-range'); };

    document.getElementsByName('mark-dropdown').forEach((v, k, p) => {
        v.onmousemove = () => { sel.changeMark(true, this); };
    })
});

/***/ }),
/* 1 */
/***/ (function(module, exports) {

$(function() {
    var mainSwiper = new Swiper(".swiper-container", {
        loop: !0,
        paginationClickable: !0,
        nextButton: ".swiper-button-next",
        prevButton: ".swiper-button-prev",
        speed: 600,
        mousewheel: true,
    });
    var brandSwiper = new Swiper(".swiper-container-brand", {
        loop: true,
        paginationClickable: true,
        speed: 600,
        mousewheel: true,
        wrapperClass: "swiper-wrapper-brand",
        slidesPerView: 1,
        spaceBetween: 30,
        height: 100,
        direction: "vertical",
        on: {
            init: function() {
                console.log('swiper initialized');
            },
        },
    });


    var s = brandSwiper.on;
    s('slideChange', () => {
        console.log('slide changed');
    });
    var tasteSwiper = new Swiper(".swiper-container-taste", {
        loop: true,
        paginationClickable: true,
        speed: 600,
        mousewheel: true,
        wrapperClass: "swiper-wrapper-taste",
        slidesPerView: 1,
        spaceBetween: 30,
        height: 100,
        direction: "vertical"
    });
});

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeMass", function() { return changeMass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeMark", function() { return changeMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeTaste", function() { return changeTaste; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processMarks", function() { return processMarks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processTastes", function() { return processTastes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeStatButton", function() { return changeStatButton; });
function changeMass(trueMass) {
    var mass = document.getElementById("mass");
    var massR = document.getElementById("mass-range");
    if (trueMass == "mass") {
        massR.value = mass.value;
    } else {
        mass.value = massR.value;
    }
}

function changeMark(isButton, current) {
    const input = document.getElementById("input-mark");
    if (isButton) {
        processMarks((v) => v != current.textContent);
        input.value = current.textContent;
        input.textContent = current.textContent;
    } else {
        processMarks((v) => input.value && input.value != "" && v.indexOf(input.value) == -1);
    }
    input.textContent = input.value;
}

function changeTaste(isButton, current) {
    const input = document.getElementById("input-taste");
    // const markName = current.name.split("-")[current.name.split("-").length - 1];
    if (isButton) {
        input.value = current.textContent;
        // processMarks((v) => v != markName);
    }
    input.textContent = input.value;
}

// включает разделы с маркой, которая needOff(markName) -> false
function processMarks(needOff) {
    const marks = document.getElementsByName("mark-dropdown");
    for (let i = 0; i < marks.length; i++) {
        var className = marks[i].className;
        if (needOff(marks[i].textContent)) {
            className = className.replace("d-inline", "d-none");
            marks[i].className = className;

            processTastes(marks[i].textContent, "d-inline", "d-none");
        } else {
            className = className.replace("d-none", "d-inline");
            marks[i].className = className;

            processTastes(marks[i].textContent, "d-none", "d-inline");
        }
    }
}

function processTastes(markName, from, to) {
    var tastes = document.getElementsByName("taste-dropdown-" + markName);
    var tasteSups = document.getElementsByName("taste-dropdown-sup-" + markName);
    var className;
    for (let i = 0; i < tastes.length; i++) {
        className = tastes[i].className;
        className = className.replace(from, to);
        tastes[i].className = className;
    }

    for (let i = 0; i < tasteSups.length; i++) {
        className = tasteSups[i].className;
        className = className.replace(from, to);
        tasteSups[i].className = className;
    }
}

function changeStatButton(isTaste) {
    var primary, second;
    if (isTaste) {
        primary = document.getElementById("tabac");
        second = document.getElementById("recipe");
    } else {
        primary = document.getElementById("recipe");
        second = document.getElementById("tabac");
    }
    var className;
    className = primary.className.replace("btn-secondary", "btn-primary");
    primary.className = className;
    className = second.className.replace("btn-primary", "btn-secondary");
    second.className = className;
}

/***/ })
/******/ ]);